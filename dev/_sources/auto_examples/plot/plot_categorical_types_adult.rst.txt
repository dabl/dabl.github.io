
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot/plot_categorical_types_adult.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_plot_categorical_types_adult.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_plot_categorical_types_adult.py:


Comparing categorical variable visualizations
=============================================
This example showcases the four types of visualization supported for
categorical variables for classification,
which are 'count', 'proportion', 'mosaic' and 'sankey'.

.. GENERATED FROM PYTHON SOURCE LINES 8-14

.. code-block:: default


    from dabl.plot import plot_classification_categorical
    from dabl.datasets import load_adult

    data = load_adult()








.. GENERATED FROM PYTHON SOURCE LINES 15-20

The 'count' plot is easiest to understand and closest to the data, as it
simply provides a bar-plot of class counts per category.
However, it makes it hard to make comparisons between different categories.
For example, for workclass, it is hard to see the differences in proportions
among the categories.

.. GENERATED FROM PYTHON SOURCE LINES 21-23

.. code-block:: default

    plot_classification_categorical(data, target_col='income', kind="count")




.. image-sg:: /auto_examples/plot/images/sphx_glr_plot_categorical_types_adult_001.png
   :alt: Categorical Features vs Target, relationship, marital-status, education-num, education, occupation, hours-per-week, gender, workclass, native-country, race
   :srcset: /auto_examples/plot/images/sphx_glr_plot_categorical_types_adult_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    array([[<AxesSubplot: title={'center': 'relationship'}, xlabel='count', ylabel='relationship'>,
            <AxesSubplot: title={'center': 'marital-status'}, xlabel='count', ylabel='marital-status'>,
            <AxesSubplot: title={'center': 'education-num'}, xlabel='count', ylabel='education-num'>,
            <AxesSubplot: title={'center': 'education'}, xlabel='count', ylabel='education'>,
            <AxesSubplot: title={'center': 'occupation'}, xlabel='count', ylabel='occupation'>],
           [<AxesSubplot: title={'center': 'hours-per-week'}, xlabel='count', ylabel='hours-per-week'>,
            <AxesSubplot: title={'center': 'gender'}, xlabel='count', ylabel='gender'>,
            <AxesSubplot: title={'center': 'workclass'}, xlabel='count', ylabel='workclass'>,
            <AxesSubplot: title={'center': 'native-country'}, xlabel='count', ylabel='native-country'>,
            <AxesSubplot: title={'center': 'race'}, xlabel='count', ylabel='race'>]],
          dtype=object)



.. GENERATED FROM PYTHON SOURCE LINES 24-29

The 'proportion' plot on the other hand *only* shows the proportion, so we
can see that the proportions in state-government, government, and
self-employed are nearly the same. However, 'proportion' does not show how
many samples are in each category. How much each category is actually
present in the data can be very important, though.

.. GENERATED FROM PYTHON SOURCE LINES 30-32

.. code-block:: default

    plot_classification_categorical(data, target_col='income', kind="proportion")




.. image-sg:: /auto_examples/plot/images/sphx_glr_plot_categorical_types_adult_002.png
   :alt: Categorical Features vs Target, relationship, marital-status, education-num, education, occupation, hours-per-week, gender, workclass, native-country, race
   :srcset: /auto_examples/plot/images/sphx_glr_plot_categorical_types_adult_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    array([[<AxesSubplot: title={'center': 'relationship'}>,
            <AxesSubplot: title={'center': 'marital-status'}>,
            <AxesSubplot: title={'center': 'education-num'}>,
            <AxesSubplot: title={'center': 'education'}>,
            <AxesSubplot: title={'center': 'occupation'}>],
           [<AxesSubplot: title={'center': 'hours-per-week'}>,
            <AxesSubplot: title={'center': 'gender'}>,
            <AxesSubplot: title={'center': 'workclass'}>,
            <AxesSubplot: title={'center': 'native-country'}>,
            <AxesSubplot: title={'center': 'race'}>]], dtype=object)



.. GENERATED FROM PYTHON SOURCE LINES 33-37

The 'mosaic' plot shows both the class proportions within each category
(on the x axis) as well as the proportion of the category in the data
(on the y axis). The 'mosaic' plot can be a bit busy; in particular if
there are many classes and many catgories, it becomes harder to interpret.

.. GENERATED FROM PYTHON SOURCE LINES 38-39

.. code-block:: default

    plot_classification_categorical(data, target_col='income', kind="mosaic")



.. image-sg:: /auto_examples/plot/images/sphx_glr_plot_categorical_types_adult_003.png
   :alt: Categorical Features vs Target, relationship, marital-status, education-num, education, occupation, hours-per-week, gender, workclass, native-country, race
   :srcset: /auto_examples/plot/images/sphx_glr_plot_categorical_types_adult_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    array([[<AxesSubplot: title={'center': 'relationship'}>,
            <AxesSubplot: title={'center': 'marital-status'}>,
            <AxesSubplot: title={'center': 'education-num'}>,
            <AxesSubplot: title={'center': 'education'}>,
            <AxesSubplot: title={'center': 'occupation'}>],
           [<AxesSubplot: title={'center': 'hours-per-week'}>,
            <AxesSubplot: title={'center': 'gender'}>,
            <AxesSubplot: title={'center': 'workclass'}>,
            <AxesSubplot: title={'center': 'native-country'}>,
            <AxesSubplot: title={'center': 'race'}>]], dtype=object)



.. GENERATED FROM PYTHON SOURCE LINES 40-44

The 'sankey' plot is even busier, as it combines the features of the 'count'
plot with an alluvial flow diagram of interactions.
By default, only the 5 most common features are included in the sankey
diagram, which can be adjusted by calling the plot_sankey function directly.

.. GENERATED FROM PYTHON SOURCE LINES 45-47

.. code-block:: default


    plot_classification_categorical(data, target_col='income', kind="sankey")



.. image-sg:: /auto_examples/plot/images/sphx_glr_plot_categorical_types_adult_004.png
   :alt: plot categorical types adult
   :srcset: /auto_examples/plot/images/sphx_glr_plot_categorical_types_adult_004.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  11.338 seconds)


.. _sphx_glr_download_auto_examples_plot_plot_categorical_types_adult.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_categorical_types_adult.py <plot_categorical_types_adult.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_categorical_types_adult.ipynb <plot_categorical_types_adult.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
