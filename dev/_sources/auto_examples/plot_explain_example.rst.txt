.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_explain_example.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_plot_explain_example.py:


Model Explanation
=================



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_plot_explain_example_001.png
          :alt: ROC curve for class 0, ROC curve for class 1, ROC curve for class 2
          :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/images/sphx_glr_plot_explain_example_002.png
          :alt: class: 0, class: 1, class: 2
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Running DummyClassifier(strategy='prior')
    accuracy: 0.338 recall_macro: 0.333 precision_macro: 0.113 f1_macro: 0.169
    === new best DummyClassifier(strategy='prior') (using recall_macro):
    accuracy: 0.338 recall_macro: 0.333 precision_macro: 0.113 f1_macro: 0.169

    Running GaussianNB()
    accuracy: 0.955 recall_macro: 0.956 precision_macro: 0.959 f1_macro: 0.955
    === new best GaussianNB() (using recall_macro):
    accuracy: 0.955 recall_macro: 0.956 precision_macro: 0.959 f1_macro: 0.955

    Running MultinomialNB()
    accuracy: 0.940 recall_macro: 0.941 precision_macro: 0.944 f1_macro: 0.940
    Running DecisionTreeClassifier(class_weight='balanced', max_depth=1)
    accuracy: 0.579 recall_macro: 0.581 precision_macro: 0.451 f1_macro: 0.476
    Running DecisionTreeClassifier(class_weight='balanced', max_depth=5)
    accuracy: 0.910 recall_macro: 0.908 precision_macro: 0.915 f1_macro: 0.908
    Running DecisionTreeClassifier(class_weight='balanced', min_impurity_decrease=0.01)
    accuracy: 0.902 recall_macro: 0.901 precision_macro: 0.908 f1_macro: 0.900
    Running LogisticRegression(C=0.1, class_weight='balanced', max_iter=1000)
    accuracy: 0.985 recall_macro: 0.985 precision_macro: 0.986 f1_macro: 0.985
    === new best LogisticRegression(C=0.1, class_weight='balanced', max_iter=1000) (using recall_macro):
    accuracy: 0.985 recall_macro: 0.985 precision_macro: 0.986 f1_macro: 0.985

    Running LogisticRegression(class_weight='balanced', max_iter=1000)
    accuracy: 0.977 recall_macro: 0.978 precision_macro: 0.979 f1_macro: 0.977

    Best model:
    LogisticRegression(C=0.1, class_weight='balanced', max_iter=1000)
    Best Scores:
    accuracy: 0.985 recall_macro: 0.985 precision_macro: 0.986 f1_macro: 0.985
                  precision    recall  f1-score   support

               0       0.88      1.00      0.93        14
               1       1.00      0.92      0.96        26
               2       1.00      1.00      1.00         5

        accuracy                           0.96        45
       macro avg       0.96      0.97      0.96        45
    weighted avg       0.96      0.96      0.96        45

    [[14  0  0]
     [ 2 24  0]
     [ 0  0  5]]






|


.. code-block:: default

    from dabl.models import SimpleClassifier
    from dabl.explain import explain
    from sklearn.datasets import load_wine
    from sklearn.model_selection import train_test_split

    wine = load_wine()

    X_train, X_test, y_train, y_test = train_test_split(wine.data, wine.target)

    sc = SimpleClassifier()

    sc.fit(X_train, y_train)

    explain(sc, X_test, y_test)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.701 seconds)


.. _sphx_glr_download_auto_examples_plot_explain_example.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_explain_example.py <plot_explain_example.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_explain_example.ipynb <plot_explain_example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
